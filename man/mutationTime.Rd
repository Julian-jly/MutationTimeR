% Generated by roxygen2 (4.0.1): do not edit by hand
\name{mutationTime}
\alias{mutationTime}
\title{Compute mutation time from copy number gains and point mutations}
\usage{
mutationTime(vcf, bb, clusters = data.frame(cluster = 1, proportion =
  max(bb$clonal_frequency, na.rm = TRUE), n_ssms = 100),
  purity = max(bb$clonal_frequency, na.rm = TRUE), gender = "female",
  isWgd = FALSE, xmin = 3, rho = 0, n.boot = 200)
}
\arguments{
\item{vcf}{A vcf object of ssnms. See VariantAnnotation::readVcf()}

\item{bb}{The copy number as a GRanges() object, meta data in consensus format. See loadBB()}

\item{clusters}{A data.frame with the cluster proportion and n_ssms}

\item{purity}{The purity of the samples}

\item{gender}{'male' or 'female'}

\item{isWgd}{TRUE/FALSE}

\item{xmin}{min read support. Needed for power calculations}

\item{rho}{Dispersion parameter}
}
\value{
A list with elements (V: Data.Frame with variant-specific timing information, can be added to vcf object; T: DataFrame with timing information to be added to CN Ranges; power.c power of each cluster).
}
\description{
Compute mutation time from copy number gains and point mutations
}
\examples{
bb <- MutationTime.R:::refLengths[1:23]
bb$major_cn <- 3
bb$minor_cn <- 1
bb$clonal_frequency <- 0.8
bb$timing_param <- MutationTime.R:::defineMcnStates(bb, purity=0.8, clusters=data.frame(cluster=1, proportion=0.8, n_ssms=100))
for(i in seq_along(bb)){
	bb$timing_param[[i]][,"P.m.sX"] <- c(0.6,0.1,0.3)
	bb$timing_param[[i]][,"power.m.s"] <- rep(1,3)
}
bb$n.snv_mnv <- width(MutationTime.R:::refLengths[1:23])/1e6

v <- MutationTime.R:::simulateMutations(bb)
b <- bb[,c("major_cn","minor_cn","clonal_frequency")]

mt <- mutationTime(v, b, n.boot=10)
mcols(b) <- cbind(mcols(b),mt$T)

info(header(v)) <- rbind(info(header(v)),mtHeader())
info(v) <- cbind(info(v), mt$V)

plotSample(v,b)
}
\author{
mg14
}

