% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MutationTime.R
\name{computeMutCn}
\alias{computeMutCn}
\title{Compute timing parameters}
\usage{
computeMutCn(
  vcf,
  bb,
  clusters = data.frame(cluster = 1, proportion = max(bb$clonal_frequency, na.rm =
    TRUE), n_ssms = 100),
  purity = max(bb$clonal_frequency, na.rm = TRUE),
  gender = "female",
  isWgd = FALSE,
  xmin = 3,
  rho = 0,
  n.boot = 200,
  deltaFreq = 0.05
)
}
\arguments{
\item{vcf}{A vcf object of ssnms. See VariantAnnotation::readVcf()}

\item{bb}{The copy number as a GRanges() object, meta data in consensus format. See loadBB()}

\item{clusters}{A data.frame with the cluster proportion and n_ssms}

\item{purity}{The purity of the samples}

\item{gender}{'male' or 'female'}

\item{isWgd}{TRUE/FALSE}

\item{xmin}{min read support. Needed for power calculations}

\item{rho}{Dispersion parameter}
}
\value{
A list with elements (D: Annotated Data.Frame, can be added to vcf object; P: Timing parameters to be added to CN Ranges; power.c power of each cluster).
}
\description{
Compute timing parameters
}
\examples{
cn <- MutationTimeR:::refLengths[1:23]
cn$major_cn <- 3
cn$minor_cn <- 1
cn$clonal_frequency <- 0.8
cn$timing_param <- MutationTimeR:::defineMcnStates(cn, purity=0.8, clusters=data.frame(cluster=1, proportion=0.8, n_ssms=100))
for(i in seq_along(cn)){
	cn$timing_param[[i]][,"P.m.sX"] <- c(0.6,0.1,0.3)
	cn$timing_param[[i]][,"power.m.s"] <- rep(1,3)
}
cn$n.snv_mnv <- width(MutationTimeR:::refLengths[1:23])/1e6

vcf <- MutationTimeR:::simulateMutations(cn)
cn_timed <- cn[,c("major_cn","minor_cn","clonal_frequency")]

mt <- mutationTime(vcf, cn_timed, n.boot=10)
mcols(cn_timed) <- cbind(mcols(cn_timed),mt$T)

info(header(vcf)) <- rbind(info(header(vcf)),mtHeader())
info(vcf) <- cbind(info(vcf), mt$V)

plotSample(vcf,cn_timed)
}
\author{
mg14
}
